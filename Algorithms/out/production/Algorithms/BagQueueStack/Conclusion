支持泛型和迭代的背包、队列、栈的实现所提供的抽象使我们能够编写简洁的用例程序来操作对象的集合
1、我们将以这些数据类型为基石构造本书中的其他更高级的数据结构
2、它们展示了数据结构和算法的关系以及同时满足多个有可能相互冲突的性能目标时所要面对得挑战
3、我们将要学习的若干算法的实现重点就是需要其中的抽象数据类型能够支持对对象集合的强大操作

数据结构
两种表示对象集合的方式：数组、链表 -> 顺序存储、链式存储
    扩展：在各种抽象数据类型的实现中将多种方式结归并扩展这些基本的数据结构。
        其中一种重要的扩展就是各种含有多个链接的数据结构  eg.二叉树，它含有两个链接的结点组成
        另一个重要的扩展就是复合型的数据结构：可以使用背包存储栈，用队列存储数组等

在研究一个新的应用领域时，将按照以下步骤识别目标并使用数据抽象解决问题
    定义API
    根据特定的应用场景开发用例代码
    描述一种数据结构（一组值的表示），并在API所对应的抽象数据类型的实现中根据它定义类的实例变量
    描述算法（实现一组操作的方式），并根据它实现类中的实例方法
    分析算法的性能特点：这一步常常能够决定哪种算法和实现才是解决现实应用问题的最佳选择
