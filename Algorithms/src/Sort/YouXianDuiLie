许多应用程序都需要处理有序的元素，但不一定要求他们全部有序，或是不一定要一次就将它们排序。很多情况下我们会手机一些元素，处理当前键值最大的元素，然后再收集更多的元素，在处理当前键值最大的元素，如此这般。
在这种情况下，一个合适的数据结构应该支持两种操作：删除最大元素、插入元素。这种数据类型叫做"优先队列"。优先队列的使用和队列（删除最老的元素）以及栈（删除最新的元素）类似，但高效地实现它则更具有挑战性。
优先队列的一些中亚奥的应用场景包括：
	模拟系统，其中事件的键即为发生的时间，而系统需要按照时间顺序处理所有事件
	任务调度，其中键值对应的优先级决定了应该首先执行那些任务
	数值计算，键值代表计算错误，需要按照键值指定的顺序来修正它们

通过插入一列元素然后一个个地删掉其中最小的元素，我们可以用优先队列实现排序算法。一种名为堆排序的重要排序算法也来自于基于对的优先队列的实现

